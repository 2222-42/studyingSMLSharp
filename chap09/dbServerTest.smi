_require "basis.smi"
_require "sql.smi"
_require "reify.smi"
_require "./myDBEnv.smi"

type myDBty = {persons: {age: int, name: string} list}
val myDBserver : myDBty SQL.server
val myDBconn : myDBty SQL.conn
val Q : ['a#{persons: 'b list},
          'b#{age: int, name: string}.
          'a SQL.conn -> {age: int, name: string} SQL.cursor]
val myDBcur : {age: int, name: string} SQL.cursor
val selectYoung : int -> ['a#{persons: 'b list},
                          'b#{age: int, name: string}.
                          'a SQL.conn -> (string*int) SQL.cursor]
val youngResult : (string*int) SQL.cursor
val insertPersons : {age: int, name: string} list
                    -> ['e#{persons: 'f list}, 'f#{age: int, name: string}. 'e SQL.conn -> unit]
val myDBinsertPersons : {age: int, name: string} list -> {persons: {age: int, name: string} list} SQL.conn -> unit
val retire : int -> ['c#{persons: {age: int, name: string} list}, 'd#{age: int}. 'c SQL.conn -> unit]
